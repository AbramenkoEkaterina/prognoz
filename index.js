const apiKey = "ef2ade3aeec91d0e2f6ae62a77546270"; // –∫–ª—é—á

async function getCityByLocation() {
  return new Promise((resolve, reject) => {
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –ï—Å–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –Ω–µ—Ç navigator.geolocation, —Ç–æ —Å—Ä–∞–∑—É –æ—à–∏–±–∫–∞.
    if (!navigator.geolocation) {
      reject("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º.");
      return;
    }

    //–ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    //getCurrentPosition ‚Äî –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –±—Ä–∞—É–∑–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    navigator.geolocation.getCurrentPosition(
       
      async (position) => {
        // console.log(position.coords); //—Å–≤–æ–π—Å—Ç–≤–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
        const { latitude, longitude } = position.coords;

        try {
          // –ó–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É OpenWeatherMap
          const response = await fetch(
            `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&lang=ru&appid=${apiKey}`
          );

          if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ API");


          const data = await response.json();

          //–í—ã–≤–µ–¥–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç —Ü–µ–ª–∏–∫–æ–º
      //console.table("–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:", data);
      //  console.log("–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", data.main);
      // console.log("–ü–æ–≥–æ–¥–∞:", data.weather);
      // console.log("–í–µ—Ç–µ—Ä:", data.wind);
      // console.log("–°–∏—Å—Ç–µ–º–∞:", data.sys);
      console.log(data.weather[0])

          resolve({
            city: data.name,
            country: data.sys.country,
            temp: data.main.temp, //—Ç–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            feels_like: data.main.feels_like,// –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫
            main: data.weather[0].main, //—É–º–µ–Ω—å—à–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–¥–æ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏
            description: data.weather[0].description,//–æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã
            wind: data.wind.speed,//—Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
            humidity: data.main.humidity,//–≤–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞
          });
        } catch (err) {
          reject("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: " + err.message);
        }
      },
      (error) => {
        reject("–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª–æ–Ω—ë–Ω.");
      }
    );
  });
}

getCityByLocation()
  .then((data) => {
    // –î–∞—Ç–∞
    const now = new Date();
    const formattedDate = now.toLocaleDateString("ru-RU", {
      day: "2-digit",
      month: "long",
      year: "numeric",
    });
    const formattedTime = now.toLocaleTimeString("ru-RU", {
      hour: "2-digit",
      minute: "2-digit",
    });

    // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ HTM
    document.getElementById("date").textContent = formattedDate;
    document.getElementById("time").textContent = formattedTime;
    document.getElementById("city-data").textContent =`${data.city}`;

      //console.log("–í–∞—à –≥–æ—Ä–æ–¥:", data.city); console.log("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:", data.temp, "¬∞C"); console.log("–ü–æ–≥–æ–¥–∞:", data.description);
      //document.getElementById("weather_icon").textContent = "ü•∞";
      document.getElementById("weather_temp").textContent = `${Math.round(data.temp)}¬∞C`
      document.getElementById("weather_feels_like").textContent = `–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ${Math.round(data.feels_like)}¬∞C`
      document.getElementById("weather_description").textContent = data.description;
      // –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
    setWeatherIcon(data.main);
  })
  .catch((error) => {
    console.error(error);
    alert(error);
  });

  function setWeatherIcon(main) {
  const iconEl = document.getElementById("weather_icon");

  // —É–±–∏—Ä–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã –∫—Ä–æ–º–µ –±–∞–∑–æ–≤–æ–≥–æ "icon"
  iconEl.className = "icon";

  // —Å–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π
  const iconMap = {
    Clear: "sun",
    Clouds: "clouds",
    Rain: "rain",
    Snow: "snow",
    Thunderstorm: "thunder",
    Drizzle: "rain",
    Mist: "mist",
    Fog: "mist",
    Haze: "mist",
    Smoke: "mist",
    Dust: "mist",
    Tornado: "thunder"
  };

  const iconClass = iconMap[main] || "default";
  iconEl.classList.add(iconClass);
}